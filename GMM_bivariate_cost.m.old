function [cost fitstruct] = GMM_bivariate_cost(x,zmat,Hvec,Lvec,imat_prune,options)

if ~exist('options','var'), options = struct(); end

x_struct = GMM_bivariate_mapparams(x,options);

v2struct(x_struct);

nsnp = size(zmat,1);
nprune = size(imat_prune,2);

C0 = [sig01^2 sig01*sig02*rho0; sig01*sig02*rho0 sig02^2];
C1 = [sigb1^2 0; 0 0];
C2 = [0 0; 0 sigb2^2];
C3 = [sigb1^2 sigb1*sigb2*rhob; sigb1*sigb2*rhob sigb2^2];

%keyboard

Ledges = [0:100:500];
zmeans = linspace(-15,15,31); zstep = zmeans(2)-zmeans(1); zedges = [zmeans-zstep/2,zmeans(end)+zstep/2];
[tmp1 tmp2] = meshgrid(zmeans,zmeans); zmeangrid = [colvec(tmp1) colvec(tmp2)];

ticks = find(mod(zmeans,5)==0); ticklabels = cellfun(@num2str,num2cell(zmeans(ticks)),'UniformOutput',false);

pi0effvec = (pi0).^Lvec;
cost = 0;
hcnt_sum = 0;
for prunei = 1:nprune
  if pi1 < 1 & pi2 < 1 & pi3 < 1
    pi0effvec_tmp = pi0effvec(imat_prune(:,prunei));
    pi1effvec_tmp = (1-pi0effvec_tmp)*pi1/(pi1+pi2+pi3);
    pi2effvec_tmp = (1-pi0effvec_tmp)*pi2/(pi1+pi2+pi3);
    pi3effvec_tmp = (1-pi0effvec_tmp)*pi3/(pi1+pi2+pi3);
    Hmat_tmp = repmat(reshape(Hvec(imat_prune(:,prunei)),[1 1 length(pi0effvec_tmp)]),[2 2 1]); 
    C0mat = repmat(C0,[1 1 length(pi0effvec_tmp)]);
    C1mat = Hmat_tmp.*repmat(C1,[1 1 length(pi0effvec_tmp)]);
    C2mat = Hmat_tmp.*repmat(C2,[1 1 length(pi0effvec_tmp)]);
    C3mat = Hmat_tmp.*repmat(C3,[1 1 length(pi0effvec_tmp)]);
    pvec_tmp = pi0effvec_tmp.*mvnpdf(zmat(imat_prune(:,prunei),:),0,C0)+...
               pi1effvec_tmp.*mvnpdf_amd(zmat(imat_prune(:,prunei),:),0,C0mat+C1mat)+...
               pi2effvec_tmp.*mvnpdf_amd(zmat(imat_prune(:,prunei),:),0,C0mat+C2mat)+...
               pi3effvec_tmp.*mvnpdf_amd(zmat(imat_prune(:,prunei),:),0,C0mat+C3mat); 
    if nargout > 1
      valvec1 = cat(1,zmat(imat_prune(:,prunei),1),-zmat(imat_prune(:,prunei),1));
      valvec2 = cat(1,zmat(imat_prune(:,prunei),2),-zmat(imat_prune(:,prunei),2));
      [hcnt] = histc2d(valvec1,valvec2,zedges,zedges); hcnt = hcnt(1:end-1,1:end-1);
      hcnt_sum = hcnt_sum + hcnt;
if 0
      hcnt_pred = 0;
      for j = 1:size(C0mat,3)
        hcnt_pred = hcnt_pred + pi0effvec_tmp(j)*mvnpdf(zmeangrid,0,C0mat(:,:,j))+...
                                pi1effvec_tmp(j)*mvnpdf(zmeangrid,0,C0mat(:,:,j)+C1mat(:,:,j))+...
                                pi2effvec_tmp(j)*mvnpdf(zmeangrid,0,C0mat(:,:,j)+C2mat(:,:,j))+...
                                pi3effvec_tmp(j)*mvnpdf(zmeangrid,0,C0mat(:,:,j)+C3mat(:,:,j));
        if mod(j,1000)==0, fprintf(1,'j=%d of %d\n',j,size(C0mat,3)); figure(2); clf; imagesc(log10(reshape(hcnt_pred/j,size(hcnt_sum)))); colormap(hot); axis equal; axis xy; axis tight; drawnow; end
      end
end
    end
  else
    fprintf('Not implemented yet!\n');
    keyboard
  end
  cost = cost + sum(-log(pvec_tmp));
end

figure(1); clf; imagesc(log10(hcnt_sum/max(hcnt_sum(:))),[-5 0]); colormap(hot); axis equal; axis xy; axis tight; set(gca,'XTick',ticks,'XTickLabel',ticklabels,'YTick',ticks,'YTickLabel',ticklabels);

prunei=1;
valvec1 = cat(1,zmat(imat_prune(:,prunei),1),-zmat(imat_prune(:,prunei),1));
valvec2 = cat(1,zmat(imat_prune(:,prunei),2),-zmat(imat_prune(:,prunei),2));
figure(3); clf; plot(valvec2,valvec1,'.');

if nargout==1, return; end

fitstruct = struct();

% Add code to plot fit

% ToDo
%   Compute predicted and observed bivariate histograms of z-scores, overall and by H-bin, and L-bin
%   Compute predicted and observed conditional expectancy of z-scores (from bivariate distribution)
%   Check w. Dominic / Chun re: up-to-date LDmat & TLD (L)
%   Extend to using RES, rather than TLD
%   Exclude MHC from fitting & pruning
%   Restrict range of TLD (L) in fitting
%   Allow for at least two causal SNPs in LD

%   Should try smoooth 2-d kernel / PDF estimator, allowing for scaling by H, and weighting by 1-pi0eff
%     First, based on raw z-scores
%     Then, based incorporating effects of H and L

%   Doesn't seem to fit data well

% Try manual fitting of generalized Gaussian mixture model (don't assume "Venn Diagram" structure):

x_struct2 = struct('sig01',x_struct.sig01,'sig02',x_struct.sig02,'rho0',x_struct.rho0,'pivec',[1e-2],'sig1vec',[1],'sig2vec',[1.0],'rhovec',[0.4]);
x_struct2 = struct('sig01',x_struct.sig01,'sig02',x_struct.sig02,'rho0',x_struct.rho0,'pivec',[1e-2],'sig1vec',[0.5],'sig2vec',[2.0],'rhovec',[0.9]);
x_struct2 = struct('sig01',x_struct.sig01,'sig02',x_struct.sig02,'rho0',x_struct.rho0,'pivec',[1e-2 1e-4],'sig1vec',[0.4 0.5],'sig2vec',[0.6 2.5],'rhovec',[0.4 0.95]);
pdfmat_pred = GMM_bivariate_histpred(x_struct2);

% ToDo
%   Implement data fit (start with fitting of z-scores (using mean H and L), then fit with predicted effects of L and H)
%   Also incorporate Neff1 and Neff2
%   Backup GMM_bivariate_fit, GMM_bivariate_cost, GMM_bivariate_mapparams; make new versions
%   Remove MHC from fit and pruning
%   Also compute & plot empirical and predited conditional expectancy values for z, delta or beta, replication rate)
%   Could implement as stepwise fit (adding Gaussian mixtures ony if fit improves significantly)


