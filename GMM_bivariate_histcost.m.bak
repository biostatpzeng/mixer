function [cost fitstruct pvecs_post dvecs_post] = GMM_bivariate_histcost(x,sumstats,options,zmat,TLDvec,Hvec)

ngm = options.ngm;

x_struct = GMM_bivariate_mapparams(x,options);

v2struct(x_struct);

ndf = size(sumstats,1); nrep = size(sumstats,2); ni = ndf*nrep;

sig0_d = 1e-6; % Probability mass at zero

C0 = [sig01^2 sig01*sig02*rho0; sig01*sig02*rho0 sig02^2];
C0_d = [sig0_d^2 0; 0 sig0_d^2];
pi0 = 1-sum(pivec);

if nargout>1, pmats_z = cell(size(sumstats)); pmats_d = cell(size(sumstats)); pmats_post = cell(size(sumstats)); pmats_d_post = cell(size(sumstats)); mu1mats = cell(size(sumstats)); mu2mats = cell(size(sumstats)); end
cost = 0;
for i = 1:ni
  edgevec_z = sumstats{i}.edgevec; nzbins = length(edgevec_z)-1; meanvec_z = (edgevec_z(1:end-1)+edgevec_z(2:end))/2; hcmats = sumstats{i}.hcmats;
  Neff1 = sumstats{i}.Neff1; Neff2 = sumstats{i}.Neff2;
  gvlist = sumstats{i}.gvlist; ngvbins = length(gvlist)-1; ldlist = sumstats{i}.ldlist; nldbins = length(ldlist)-1;
  [Z2 Z1] = meshgrid(edgevec_z,edgevec_z); zmat_edges = [Z1(:) Z2(:)]; [Z2 Z1] = meshgrid(meanvec_z,meanvec_z); zmat_means = [Z1(:) Z2(:)];
  if nargout>1, pmats_z{i} = cell(nldbins,ngvbins); pmats_d{i} = cell(nldbins,ngvbins); Cs_z = cell(nldbins,ngvbins); Cs_d = cell(nldbins,ngvbins); mu1mats{i} = cell(nldbins,ngvbins); mu2mats{i} = cell(nldbins,ngvbins); end
  for ldi = 1:nldbins
    for gvi = 1:ngvbins
      gv = (gvlist(gvi)+gvlist(gvi+1))/2; % Should probably take mean over actual gv-values
      ld = (ldlist(ldi)+ldlist(ldi+1))/2; % Should probably take mean over actual ld-values
      hcmat = hcmats{ldi,gvi};
      cmat_z = cell(1,ngm+1); pmat_z = cell(1,ngm+1);
      cmat_d = cell(1,ngm+1); pmat_d = cell(1,ngm+1);
      pmat_post = NaN(ngm+1,nzbins,nzbins);
      for gmi = 0:ngm, cmat_z{1+gmi} = NaN(size(hcmat)+1); cmat_d{1+gmi} = NaN(size(hcmat)+1); end
      pi0_eff = pi0.^ld; pi1_eff = 1-pi0_eff;
      pivec_eff = [pi0_eff pivec/sum(pivec)*pi1_eff];
      cmat_z{1}(:) = pi0_eff*BVNcdf(zmat_edges,[0 0],C0);
      if nargout>1, cmat_d{1}(:) = pivec_eff(1)*BVNcdf(zmat_edges,[0 0],C0_d); Cs_z{1} = C0; Cs_d{1} = C0_d; end
      for gmi = 1:ngm % Need to incorporate effects of Neff, gv, and ld
        if pi0>0 % Mixture?
          C = gv*[sig1vec(gmi)^2 rhovec(gmi)*sig1vec(gmi)*sig2vec(gmi); rhovec(gmi)*sig1vec(gmi)*sig2vec(gmi) sig2vec(gmi)^2];
          cmat_z{1+gmi}(:) = pivec_eff(1+gmi)*BVNcdf(zmat_edges,[0 0],C0+C); 
          if nargout>1, cmat_d{1+gmi}(:) = pivec_eff(1+gmi)*BVNcdf(zmat_edges,[0 0],C); end
        else
          C = ld*gv*[sig1vec(gmi)^2 rhovec(gmi)*sig1vec(gmi)*sig2vec(gmi); rhovec(gmi)*sig1vec(gmi)*sig2vec(gmi) sig2vec(gmi)^2];
          cmat_z{1+gmi}(:) = BVNcdf(zmat_edges,[0 0],C0+C); 
          if nargout>1, cmat_d{1+gmi}(:) = BVNcdf(zmat_edges,[0 0],C); end
        end
        if nargout>1
          Cs_z{1+gmi} = C0+C;
          Cs_d{1+gmi} = C;
        end
      end
      pmat_z_sum = 0;
      for gmi = 0:ngm
        pmat_z{1+gmi} = cm3_cdf2pdf(cmat_z{1+gmi});
        pmat_z_sum = pmat_z_sum + pmat_z{1+gmi};
        if nargout>1, pmat_d{1+gmi} = cm3_cdf2pdf(cmat_d{1+gmi}); end
      end
      if nargout>1 
        tic
        pmat_d_post = 0; mu1mat = 0; mu2mat = 0;
        for gmi = 0:ngm
          pmat_post(1+gmi,:,:) = pmat_z{1+gmi}./pmat_z_sum;
          Cnew = inv(inv(C0)+inv(Cs_d{1+gmi}));
          pmat_d_tmp = NaN(nzbins,nzbins,nzbins,nzbins); mu1mat_tmp = NaN(nzbins,nzbins); mu2mat_tmp = NaN(nzbins,nzbins);
          for i1 = 1:nzbins
            for i2 = 1:nzbins
              tmp = reshape(mvnpdf(zmat_means,[0 0],Cs_d{1+gmi}),[nzbins nzbins]); pmat_d_tmp(i1,i2,:,:) = reshape(mvnpdf(zmat_means,[meanvec_z(i1) meanvec_z(i2)],C0),[nzbins nzbins]).*(tmp/sum(tmp(:)));
              munew = (Cnew*[meanvec_z(i1) meanvec_z(i2)]')'; % pmat2_d_tmp(i1,i2,:,:) = reshape(mvnpdf(zmat_means,munew,Cnew),[nzbins nzbins]);
              mu1mat_tmp(i1,i2) = munew(1); mu2mat_tmp(i1,i2) = munew(2);
              if ismember(i1,[1 15 29]) & ismember(i2,[1 15 29]) & 0
                [meanvec_z(i2) meanvec_z(i1)]
                im = squeeze(pmat_d_tmp(i1,i2,:,:)); figure(1001); imagesc(log10(max(eps,im/max(im(:)))),[-5 0]); colormap(hot); axis xy; axis equal; axis tight; set(gca,'XTickLabel',{},'YTickLabel',{});
%                im2 = squeeze(pmat2_d_tmp(i1,i2,:,:)); figure(1002); imagesc(log10(max(eps,im2/max(im2(:)))),[-5 0]); colormap(hot); axis xy; axis equal; axis tight; set(gca,'XTickLabel',{},'YTickLabel',{});
                drawnow; pause;
              end
            end
          end
          pmat_d_post = pmat_d_post + pivec_eff(1+gmi)*pmat_d_tmp; 
          mu1mat = mu1mat + squeeze(pmat_post(1+gmi,:,:)).*mu1mat_tmp; mu2mat = mu2mat + squeeze(pmat_post(1+gmi,:,:)).*mu2mat_tmp;
        end
        pmats_z{i}{ldi,gvi} = pmat_z; pmats_z_sum{i}{ldi,gvi} = pmat_z_sum; pmats_d{i}{ldi,gvi} = pmat_d; pmats_post{i}{ldi,gvi} = pmat_post; pmats_d_post{i}{ldi,gvi} = pmat_d_post;
        mu1mats{i}{ldi,gvi} = mu1mat; mu2mats{i}{ldi,gvi} = mu2mat; 
        toc
      end
      cost = cost + -mnpdfln(rowvec(hcmat),rowvec(pmat_z_sum/sum(pmat_z_sum(:))));
    end
  end
end

if nargout==1, return; end

muvec1_z = NaN(1,nzbins); muvec2_z = NaN(1,nzbins); muvec1_z_pred = NaN(1,nzbins); muvec2_z_pred = NaN(1,nzbins); muvec1_d_pred = NaN(1,nzbins); muvec2_d_pred = NaN(1,nzbins);
%figure(1); clf;
figure(11); clf; title('Observed'); figure(12); clf; title('Predicted');
figure(21); clf; figure(22); clf; % figure(31); clf; figure(32); clf;
for dfi = 1
  cnt = 0;
  for ldi = 1:nldbins
    for gvi = 1:length(gvlist)-1
      hcmat = 0; pmat_z = 0; pmat_d_post = 0; pmat_post = 0;
      for repi = 1:nrep
        hcmat = hcmat + sumstats{dfi,repi}.hcmats{ldi,gvi}/nrep;
        pmat_z = pmat_z + pmats_z_sum{dfi,repi}{ldi,gvi}/nrep;
        pmat_d_post = pmat_d_post + pmats_d_post{dfi,repi}{ldi,gvi}/nrep;
%        pmat_post = pmat_post + squeeze(pmats_post{dfi,repi}{ldi,gvi}(end,:,:))/nrep;
      end
      cnt = cnt + 1;
      figure(11); subplot(nldbins,ngvbins,cnt); imagesc(log10(max(eps,hcmat/max(hcmat(:)))),[-5 0]); colormap(hot); axis xy; axis equal; axis tight; set(gca,'XTickLabel',{},'YTickLabel',{});
      figure(12); subplot(nldbins,ngvbins,cnt); imagesc(log10(max(eps,pmat_z/max(pmat_z(:)))),[-5 0]); colormap(hot); axis xy; axis equal; axis tight; set(gca,'XTickLabel',{},'YTickLabel',{});
      for j = 1:nzbins
        pvec1_z = rowvec(pmat_z(:,j)); pvec2_z = pmat_z(j,:); muvec1_z_pred(j) = sum(pvec1_z.*meanvec_z)/max(eps,sum(pvec1_z)); muvec2_z_pred(j) = sum(pvec2_z.*meanvec_z)/max(eps,sum(pvec2_z));
        pvec1_z = rowvec(hcmat(:,j)); pvec2_z = hcmat(j,:); muvec1_z(j) = condval(sum(pvec1_z)>100,sum(pvec1_z.*meanvec_z)/sum(pvec1_z),NaN); muvec2_z(j) = condval(sum(pvec2_z)>100,sum(pvec2_z.*meanvec_z)/sum(pvec2_z),NaN);
        pvec1_d = rowvec(sum(sum(pmat_d_post(:,j,:,:),4),1)); muvec1_d_pred(j) = sum(pvec1_d.*meanvec_z)/max(eps,sum(pvec1_d));
        pvec2_d = rowvec(sum(sum(pmat_d_post(j,:,:,:),3),2)); muvec2_d_pred(j) = sum(pvec2_d.*meanvec_z)/max(eps,sum(pvec2_d));
      end
      figure(21); subplot(nldbins,ngvbins,cnt); plot(meanvec_z,muvec1_z,meanvec_z,muvec1_z_pred,'LineWidth',3); ylim([-5 5]);
      figure(22); subplot(nldbins,ngvbins,cnt); plot(meanvec_z,muvec2_z,meanvec_z,muvec2_z_pred,'LineWidth',3); ylim([-5 5]);
      figure(31); subplot(nldbins,ngvbins,cnt); plot(meanvec_z,muvec1_d_pred,meanvec_z,muvec1_z_pred,'LineWidth',3); ylim([-5 5]);
      figure(32); subplot(nldbins,ngvbins,cnt); plot(meanvec_z,muvec2_d_pred,meanvec_z,muvec2_z_pred,'LineWidth',3); ylim([-5 5]);
%      figure(1); subplot(nldbins,ngvbins,cnt); imagesc(pmat_post,[0 1]); colormap(hot); axis xy; axis equal; axis tight; set(gca,'XTickLabel',{},'YTickLabel',{});
      drawnow;
    end
  end
end

fitstruct = struct('pmats_z_sum',{pmats_z_sum},'pmats_z',{pmats_z},'edgevec_z',edgevec_z,'meanvec_z',meanvec_z,'gvlist',gvlist,'ldlist',ldlist);

if exist('zmat','var')
  defvec = isfinite(sum(zmat,2));
  ldivec = max(1,min(nldbins,floor(1+interp1(ldlist,[0:nldbins],TLDvec,'linear','extrap'))));
  gvivec = max(1,min(ngvbins,floor(1+interp1(gvlist,[0:ngvbins],Hvec,'linear','extrap'))));
  pvecs_post = NaN(size(zmat,1),ngm+1); dvecs_post = NaN(size(zmat));
  for ldi = 1:nldbins
    for gvi = 1:length(gvlist)-1
      pmat_post = 0; mu1mat = 0; mu2mat = 0;
      for i = 1:ni
        pmat_post = pmat_post + pmats_post{i}{ldi,gvi}/ni;
        mu1mat = mu1mat + mu1mats{i}{ldi,gvi}/ni;
        mu2mat = mu2mat + mu2mats{i}{ldi,gvi}/ni;
      end
      ivec = find((ldivec==ldi)&(gvivec==gvi)&defvec);
      indvec1 = max(1,min(nzbins,1+(zmat(ivec,1)-meanvec_z(1))/(meanvec_z(2)-meanvec_z(1))));
      indvec2 = max(1,min(nzbins,1+(zmat(ivec,2)-meanvec_z(1))/(meanvec_z(2)-meanvec_z(1))));
      dvecs_tmp = cat(2,interp2(mu1mat,indvec1,indvec2,'linear'),interp2(mu2mat,indvec1,indvec2,'linear'));
      pvecs_tmp = zeros(length(ivec),size(pvecs_post,2));
      for gmi = 0:ngm
        pvecs_tmp(:,1+gmi) = interp2(squeeze(pmat_post(1+gmi,:,:)),indvec1,indvec2,'linear'); 
      end 
      pvecs_post(ivec,:) = pvecs_tmp;
      dvecs_post(ivec,:) = dvecs_tmp;
    end
  end
end

return 

% Compute pvecs_post and dvecs_post directly from zmat and x_fit, rather than through lookup tables



ivec = [1 15 29];
figure(666); clf; cnt = 0;
for i2 = length(ivec):-1:1
  for i1 = 1:length(ivec)
    im = squeeze(pmats_d_post{end}{end}(ivec(i1),ivec(i2),:,:)); cnt = cnt+1;
    subplot(3,3,cnt); imagesc(log10(max(eps,im/max(im(:)))),[-5 0]); colormap(hot); axis xy; axis equal; axis tight; set(gca,'XTickLabel',{},'YTickLabel',{});
  end
end

ivec = [1 15 29];
figure(667); clf; cnt = 0;
for i2 = length(ivec):-1:1
  for i1 = 1:length(ivec)
    im = squeeze(pmats2_d_post{end}{end}(ivec(i1),ivec(i2),:,:)); cnt = cnt+1;
    subplot(3,3,cnt); imagesc(log10(max(eps,im/max(im(:)))),[-5 0]); colormap(hot); axis xy; axis equal; axis tight; set(gca,'XTickLabel',{},'YTickLabel',{});
  end
end

figure(766); clf; cnt = 0;
for dfi = 1
  cnt = 0;
  for ldi = 1:nldbins
    for gvi = 1:length(gvlist)-1
      im = mu1mats{end}{ldi,gvi}; cnt = cnt+1;
      subplot(nldbins,ngvbins,cnt); imagesc(im,[-5 5]); colormap(blueblackred); axis xy; axis equal; axis tight; set(gca,'XTickLabel',{},'YTickLabel',{});
    end
  end
end

figure(767); clf; cnt = 0;
for dfi = 1
  cnt = 0;
  for ldi = 1:nldbins
    for gvi = 1:length(gvlist)-1
      im = mu2mats{end}{ldi,gvi}; cnt = cnt+1;
      subplot(nldbins,ngvbins,cnt); imagesc(im,[-5 5]); colormap(blueblackred); axis xy; axis equal; axis tight; set(gca,'XTickLabel',{},'YTickLabel',{});
    end
  end
end

subplot(3,3,1); imagesc(log10(max(eps,im/max(im(:)))),[-5 0]); colormap(hot); axis xy; axis equal; axis tight; set(gca,'XTickLabel',{},'YTickLabel',{});
im = squeeze(pmats_d_post{end}{end}(end,end,:,:));
subplot(3,3,1); imagesc(log10(max(eps,im/max(im(:)))),[-5 0]); colormap(hot); axis xy; axis equal; axis tight; set(gca,'XTickLabel',{},'YTickLabel',{});
im = squeeze(pmats_d_post{end}{end}(15,end,:,:));
subplot(3,3,1); imagesc(log10(max(eps,im/max(im(:)))),[-5 0]); colormap(hot); axis xy; axis equal; axis tight; set(gca,'XTickLabel',{},'YTickLabel',{});
im = squeeze(pmats_d_post{end}{end}(1,end,:,:));
subplot(3,3,1); imagesc(log10(max(eps,im/max(im(:)))),[-5 0]); colormap(hot); axis xy; axis equal; axis tight; set(gca,'XTickLabel',{},'YTickLabel',{});


%  ToDo
%    Compute conditional and conjunctional fdr and locfdr lookup tables as part of fitstruct
%    Don't compute unneccessary stats, unless nargout>1
%    pmats_d_post should be a posteriori probability of d, given z

% Extras
              pmat_d_tmp(i1,i2,:,:) = cm3_cdf2pdf(reshape(BVNcdf(zmat_edges,[meanvec_z(i2) meanvec_z(i1)],C0),[nzbins+1 nzbins+1])).*cm3_cdf2pdf(reshape(BVNcdf(zmat_edges,[0 0],Cs_d{1+gmi}),[nzbins+1 nzbins+1]));
              pmat2_d_tmp(i1,i2,:,:) = cm3_cdf2pdf(reshape(BVNcdf(zmat_edges,(Cnew*[meanvec_z(i2) meanvec_z(i1)]')',Cnew),[nzbins+1 nzbins+1]));

